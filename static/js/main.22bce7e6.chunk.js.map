{"version":3,"sources":["assets/abc.jpg","components/Bar/index.js","components/Header/index.js","components/LeftMenu/index.js","components/RightContent/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Bg","styled","div","_templateObject","props","open","Content","_templateObject2","FullBar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","document","body","style","overflow","react_default","a","createElement","Bar_Content","content","Component","Header","state","className","Bar","React","data","LeftMenu","_this","menuItem","map","item","onClick","clickMenuItem","background","concat","img","defaultProps","elevation","width","RightContent","RightContent_Content","undefined","App","setState","Header_Header","components_LeftMenu","components_RightContent","clear","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22bce7e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abc.e3e3c0f4.jpg\";","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Bg = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left: 100vw;\r\n  bottom:0\r\n  transition: transform 0s ease 0.5s, -webkit-transform 0s ease 0.5s;\r\n  transform: ${props =>\r\n    props.open ? `translate3d(-100%, 0, 0);` : `translate3d(0, 0, 0)`};\r\n  transition-delay: ${props => (props.open ? `0s;` : ``)};\r\n  z-index: 100;\r\n`;\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 100vw;\r\n  bottom: 0;\r\n  width: 95%;\r\n  max-width: 500px;\r\n  transform: ${props =>\r\n    props.open ? `translate3d(-100%, 0, 0);` : `translate3d(0, 0, 0)`};\r\n  background: #fff;\r\n  transition: transform 0.5s ease, -webkit-transform 0.5s ease;\r\n`;\r\nexport class FullBar extends Component {\r\n  componentDidUpdate() {\r\n    const { open } = this.props;\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Bg open={this.props.open}>\r\n        <Content open={this.props.open}>{this.props.content}</Content>\r\n      </Bg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullBar;\r\n","import React from \"react\";\r\nimport Bar from \"../Bar\";\r\nexport default class Header extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n  render() {\r\n    const { open } = this.state;\r\n    return (\r\n      <div className=\"header\">\r\n        <Bar open={open} content={<div>121212121</div>} />\r\n        <div className=\"right-side\">\r\n          <wired-icon-button className=\"pinkbg wired-rendered\">\r\n            favorite\r\n          </wired-icon-button>\r\n          <wired-icon-button className=\"pinkbg wired-rendered\">\r\n            close\r\n          </wired-icon-button>\r\n          <wired-icon-button className=\"pinkbg wired-rendered\">\r\n            star\r\n          </wired-icon-button>\r\n        </div>\r\n        <div className=\"clear\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./LeftMenu.css\";\r\nimport img from \"../../assets/abc.jpg\";\r\n\r\nconst data = [\"1\", \"2\", \"3\"];\r\n\r\nclass LeftMenu extends React.Component {\r\n  render() {\r\n    const { menuItem } = this.props;\r\n    return (\r\n      <div className=\"left-div\">\r\n        <ul className=\"menu-outside-border\">\r\n          {data.map(item => (\r\n            <li\r\n              key={item}\r\n              onClick={() => this.props.clickMenuItem(item)}\r\n              className=\"menu-item-style\"\r\n              style={{\r\n                background:\r\n                  item === menuItem\r\n                    ? `url(${img})  no-repeat center center`\r\n                    : \"\"\r\n              }}\r\n            >\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLeftMenu.defaultProps = {\r\n  menuItem: \"1\"\r\n};\r\n\r\nexport default LeftMenu;\r\n","import React from \"react\";\r\nimport \"./RightContent.css\";\r\n\r\nconst Content = props => {\r\n  const { menuItem } = props;\r\n  switch (menuItem) {\r\n    case \"1\":\r\n      return (\r\n        <wired-card elevation=\"1\" style={{ width: \"60%\" }}>\r\n          <p>title: 1</p>\r\n          <p>\r\n            content is write here!!!\r\n            <br />\r\n            <mark>hello this is content one</mark>\r\n          </p>\r\n        </wired-card>\r\n      );\r\n    case \"2\":\r\n      return (\r\n        <wired-card elevation=\"2\" style={{ width: \"60%\" }}>\r\n          <p>title: 2</p>\r\n          <p>\r\n            content is write here !!\r\n            <br />\r\n            <mark>hello this is content two</mark>\r\n          </p>\r\n        </wired-card>\r\n      );\r\n    case \"3\":\r\n      return (\r\n        <wired-card elevation=\"3\" style={{ width: \"60%\" }}>\r\n          <p>title: 3</p>\r\n          <p>\r\n            content is write here !!\r\n            <br />\r\n            <mark>hello this is content three</mark>\r\n          </p>\r\n        </wired-card>\r\n      );\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nContent.defaultProps = {\r\n  menuItem: \"1\"\r\n};\r\n\r\nclass RightContent extends React.Component {\r\n  render() {\r\n    const { menuItem } = this.props;\r\n    return (\r\n      <div className=\"right-div\">\r\n        <Content menuItem={menuItem ? menuItem : undefined} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RightContent;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport LeftMenu from \"./components/LeftMenu\";\nimport RightContent from \"./components/RightContent\";\nimport \"./App.css\";\n//https://medium.com/the-andela-way/how-to-deploy-your-react-application-to-github-pages-in-less-than-5-minutes-8c5f665a2d2a\nclass App extends React.Component {\n  state = {\n    menuItem: \"\"\n  };\n  clickMenuItem = menuItem => {\n    this.setState({\n      menuItem\n    });\n  };\n  render() {\n    const { menuItem } = this.state;\n    return (\n      <div className=\"main-app\">\n        <Header />\n        <div className=\"container\">\n          <LeftMenu\n            clickMenuItem={this.clickMenuItem}\n            menuItem={menuItem ? menuItem : undefined}\n          />\n          <RightContent menuItem={menuItem} />\n          <div style={{ clear: \"both\" }} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}